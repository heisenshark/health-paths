[debug] [2023-01-16T02:14:50.772Z] ----------------------------------------------------------------------
[debug] [2023-01-16T02:14:50.774Z] Command:       C:\Program Files\nodejs\node.exe C:\Users\Sylay\AppData\Roaming\npm\node_modules\firebase-tools\lib\bin\firebase.js emulators:start
[debug] [2023-01-16T02:14:50.774Z] CLI Version:   11.20.0
[debug] [2023-01-16T02:14:50.775Z] Platform:      win32
[debug] [2023-01-16T02:14:50.775Z] Node Version:  v16.14.2
[debug] [2023-01-16T02:14:50.776Z] Time:          Mon Jan 16 2023 03:14:50 GMT+0100 (Central European Standard Time)
[debug] [2023-01-16T02:14:50.776Z] ----------------------------------------------------------------------
[debug] 
[debug] [2023-01-16T02:14:50.842Z] Object "" in "firebase.json" has unknown property: {"additionalProperty":"react-native"}
[debug] [2023-01-16T02:14:50.847Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2023-01-16T02:14:50.847Z] > authorizing via signed-in user (sylaypaper@gmail.com)
[debug] [2023-01-16T02:14:50.956Z] java version "18.0.2" 2022-07-19

[debug] [2023-01-16T02:14:50.956Z] Java(TM) SE Runtime Environment (build 18.0.2+9-61)
Java HotSpot(TM) 64-Bit Server VM (build 18.0.2+9-61, mixed mode, sharing)

[debug] [2023-01-16T02:14:50.969Z] Parsed Java major version: 18
[info] i  emulators: Starting emulators: firestore, storage {"metadata":{"emulator":{"name":"hub"},"message":"Starting emulators: firestore, storage"}}
[debug] [2023-01-16T02:14:50.985Z] [logging] Logging Emulator only supports listening on one address (127.0.0.1). Not listening on ::1
[debug] [2023-01-16T02:14:50.986Z] [firestore] Firestore Emulator only supports listening on one address (127.0.0.1). Not listening on ::1
[debug] [2023-01-16T02:14:50.986Z] [firestore.websocket] websocket server for firestore only supports listening on one address (127.0.0.1). Not listening on ::1
[debug] [2023-01-16T02:14:50.986Z] [storage] Storage Emulator only supports listening on one address (127.0.0.1). Not listening on ::1
[debug] [2023-01-16T02:14:50.986Z] assigned listening specs for emulators {"user":{"hub":[{"address":"127.0.0.1","family":"IPv4","port":4400},{"address":"::1","family":"IPv6","port":4400}],"ui":[{"address":"127.0.0.1","family":"IPv4","port":9999},{"address":"::1","family":"IPv6","port":9999}],"logging":[{"address":"127.0.0.1","family":"IPv4","port":4500}],"firestore":[{"address":"127.0.0.1","family":"IPv4","port":8081}],"firestore.websocket":[{"address":"127.0.0.1","family":"IPv4","port":9150}],"storage":[{"address":"127.0.0.1","family":"IPv4","port":9199}]},"metadata":{"message":"assigned listening specs for emulators"}}
[debug] [2023-01-16T02:14:50.991Z] [hub] writing locator at C:\Users\Sylay\AppData\Local\Temp\hub-***REMOVED***.json
[debug] [2023-01-16T02:14:51.000Z] Ignoring unsupported arg: auto_download {"metadata":{"emulator":{"name":"firestore"},"message":"Ignoring unsupported arg: auto_download"}}
[debug] [2023-01-16T02:14:51.000Z] Ignoring unsupported arg: single_project_mode_error {"metadata":{"emulator":{"name":"firestore"},"message":"Ignoring unsupported arg: single_project_mode_error"}}
[debug] [2023-01-16T02:14:51.000Z] Starting Firestore Emulator with command {"binary":"java","args":["-Dgoogle.cloud_firestore.debug_log_level=FINE","-Duser.language=en","-jar","C:\\Users\\Sylay\\.cache\\firebase\\emulators\\cloud-firestore-emulator-v1.15.1.jar","--host","127.0.0.1","--port",8081,"--websocket_port",9150,"--project_id","***REMOVED***","--rules","C:\\Users\\Sylay\\Documents\\GitHub\\geolocationtest\\health-pathes\\firestore.rules","--single_project_mode",true],"optionalArgs":["port","webchannel_port","host","rules","websocket_port","functions_emulator","seed_from_export","project_id","single_project_mode"],"joinArgs":false} {"metadata":{"emulator":{"name":"firestore"},"message":"Starting Firestore Emulator with command {\"binary\":\"java\",\"args\":[\"-Dgoogle.cloud_firestore.debug_log_level=FINE\",\"-Duser.language=en\",\"-jar\",\"C:\\\\Users\\\\Sylay\\\\.cache\\\\firebase\\\\emulators\\\\cloud-firestore-emulator-v1.15.1.jar\",\"--host\",\"127.0.0.1\",\"--port\",8081,\"--websocket_port\",9150,\"--project_id\",\"***REMOVED***\",\"--rules\",\"C:\\\\Users\\\\Sylay\\\\Documents\\\\GitHub\\\\geolocationtest\\\\health-pathes\\\\firestore.rules\",\"--single_project_mode\",true],\"optionalArgs\":[\"port\",\"webchannel_port\",\"host\",\"rules\",\"websocket_port\",\"functions_emulator\",\"seed_from_export\",\"project_id\",\"single_project_mode\"],\"joinArgs\":false}"}}
[info] i  firestore: Firestore Emulator logging to firestore-debug.log {"metadata":{"emulator":{"name":"firestore"},"message":"Firestore Emulator logging to \u001b[1mfirestore-debug.log\u001b[22m"}}
[info] +  firestore: Firestore Emulator UI websocket is running on 9150. {"metadata":{"emulator":{"name":"firestore"},"message":"Firestore Emulator UI websocket is running on 9150."}}
[debug] [2023-01-16T02:14:52.521Z] Ignoring unsupported arg: port {"metadata":{"emulator":{"name":"storage"},"message":"Ignoring unsupported arg: port"}}
[debug] [2023-01-16T02:14:53.290Z] Temp file directory for storage emulator: C:\Users\Sylay\AppData\Local\Temp/firebase/storage/blobs {"metadata":{"emulator":{"name":"storage"},"message":"Temp file directory for storage emulator: C:\\Users\\Sylay\\AppData\\Local\\Temp/firebase/storage/blobs"}}
[debug] [2023-01-16T02:14:53.299Z] Ignoring unsupported arg: auto_download {"metadata":{"emulator":{"name":"ui"},"message":"Ignoring unsupported arg: auto_download"}}
[debug] [2023-01-16T02:14:53.299Z] Ignoring unsupported arg: port {"metadata":{"emulator":{"name":"ui"},"message":"Ignoring unsupported arg: port"}}
[debug] [2023-01-16T02:14:53.300Z] Starting Emulator UI with command {"binary":"node","args":["C:\\Users\\Sylay\\.cache\\firebase\\emulators\\ui-v1.11.2\\server\\server.js"],"optionalArgs":[],"joinArgs":false} {"metadata":{"emulator":{"name":"ui"},"message":"Starting Emulator UI with command {\"binary\":\"node\",\"args\":[\"C:\\\\Users\\\\Sylay\\\\.cache\\\\firebase\\\\emulators\\\\ui-v1.11.2\\\\server\\\\server.js\"],\"optionalArgs\":[],\"joinArgs\":false}"}}
[info] i  ui: Emulator UI logging to ui-debug.log {"metadata":{"emulator":{"name":"ui"},"message":"Emulator UI logging to \u001b[1mui-debug.log\u001b[22m"}}
[debug] [2023-01-16T02:14:53.436Z] Web / API server started at 127.0.0.1:9999
 {"metadata":{"emulator":{"name":"ui"},"message":"Web / API server started at 127.0.0.1:9999\n"}}
[debug] [2023-01-16T02:14:53.436Z] Web / API server started at ::1:9999
 {"metadata":{"emulator":{"name":"ui"},"message":"Web / API server started at ::1:9999\n"}}
[info] 
┌─────────────────────────────────────────────────────────────┐
│ ✔  All emulators ready! It is now safe to connect your app. │
│ i  View Emulator UI at http://127.0.0.1:9999/               │
└─────────────────────────────────────────────────────────────┘

┌───────────┬────────────────┬─────────────────────────────────┐
│ Emulator  │ Host:Port      │ View in Emulator UI             │
├───────────┼────────────────┼─────────────────────────────────┤
│ Firestore │ 127.0.0.1:8081 │ http://127.0.0.1:9999/firestore │
├───────────┼────────────────┼─────────────────────────────────┤
│ Storage   │ 127.0.0.1:9199 │ http://127.0.0.1:9999/storage   │
└───────────┴────────────────┴─────────────────────────────────┘
  Emulator Hub running at 127.0.0.1:4400
  Other reserved ports: 4500, 9150

Issues? Report them at https://github.com/firebase/firebase-tools/issues and attach the *-debug.log files.
 
[debug] [2023-01-16T02:15:04.883Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects/***REMOVED***/adminSdkConfig [none]
[debug] [2023-01-16T02:15:05.227Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects/***REMOVED***/adminSdkConfig 200
[debug] [2023-01-16T02:15:05.227Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects/***REMOVED***/adminSdkConfig {"projectId":"***REMOVED***","databaseURL":"https://***REMOVED***-default-rtdb.europe-west1.firebasedatabase.app","storageBucket":"***REMOVED***.appspot.com","locationId":"europe-west"}
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T02:23:05.438Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T02:23:05.438Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if true;\r\n  \r\n      allow write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n      debug(true)||\r\n          debug(debug(ratingId.replace('.{20}','')) == debug(ratingId.replace('.{20}',''))) ||(\r\n          (resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T02:23:05.492Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T02:23:05.492Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T02:23:08.792Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T02:23:08.792Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if true;\r\n  \r\n      allow write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          debug(debug(ratingId.replace('.{20}','')) == debug(ratingId.replace('.{20}',''))) ||(\r\n          (resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T02:23:08.821Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T02:23:08.822Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T02:23:19.831Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T02:23:19.831Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if true;\r\n  \r\n      allow write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n      debug(true)||\r\n          debug(debug(ratingId.replace('.{20}','')) == debug(request.auth.uid)) ||(\r\n          (resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T02:23:19.861Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T02:23:19.862Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T02:23:21.971Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T02:23:21.971Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if true;\r\n  \r\n      allow write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          debug(debug(ratingId.replace('.{20}','')) == debug(request.auth.uid)) ||(\r\n          (resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T02:23:21.996Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T02:23:21.996Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T02:25:22.825Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T02:25:22.825Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if true;\r\n  \r\n      allow write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          debug(ratingId.size() == 48) ||(\r\n          (resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T02:25:22.852Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T02:25:22.853Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T02:26:24.352Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T02:26:24.352Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if true;\r\n  \r\n      allow write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          debug(debug(ratingId.replace('.{20}','')).size == 28) ||(\r\n          (resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T02:26:24.383Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T02:26:24.383Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T02:26:24.544Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T02:26:24.544Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if true;\r\n  \r\n      allow write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          debug(debug(ratingId.replace('.{20}','')).size == 28) ||(\r\n          (resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T02:26:24.564Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T02:26:24.565Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T02:26:43.905Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T02:26:43.905Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if true;\r\n  \r\n      allow write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          debug(debug(ratingId.replace('.{20}','')).size == 1) ||(\r\n          (resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T02:26:43.927Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T02:26:43.927Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T02:26:44.108Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T02:26:44.108Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if true;\r\n  \r\n      allow write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          debug(debug(ratingId.replace('.{20}','')).size == 1) ||(\r\n          (resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T02:26:44.130Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T02:26:44.130Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T02:27:37.769Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T02:27:37.769Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if true;\r\n  \r\n      allow write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          debug(debug(ratingId.replace('.{20}','')).size == 1) ||(\r\n          (resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          // (request.auth.uid == resource.data.userId)\r\n          )\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T02:27:37.794Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T02:27:37.794Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":30,"column":78,"currentOffset":1140,"endOffset":1140},"description":"Unexpected ')'.","severity":"ERROR"},{"sourcePosition":{"fileName":"security.rules","line":32,"column":11,"currentOffset":1212,"endOffset":1212},"description":"Unexpected ')'.","severity":"ERROR"}]}
[warn] !  firestore.rules:30:78 - ERROR Unexpected ')'. 
[warn] !  firestore.rules:32:11 - ERROR Unexpected ')'. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T02:27:40.526Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T02:27:40.526Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if true;\r\n  \r\n      allow write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          debug(debug(ratingId.replace('.{20}','')).size == 1) ||(\r\n          (resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T02:27:40.561Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T02:27:40.561Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T02:27:41.610Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T02:27:41.610Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if true;\r\n  \r\n      allow write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          debug(debug(ratingId.replace('.{20}','')).size == 1) ||(\r\n          (resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T02:27:41.639Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T02:27:41.639Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T02:28:02.323Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T02:28:02.323Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if true;\r\n  \r\n      allow write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          debug(debug(ratingId.replace('.{20}','')).size == 1) ||(\r\n          (resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T02:28:02.343Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T02:28:02.343Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T02:28:10.296Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T02:28:10.296Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if true;\r\n  \r\n      allow write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          debug(debug(ratingId.replace('.{20}','')).size == 1) &&(\r\n          (resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T02:28:10.315Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T02:28:10.316Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T02:28:19.109Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T02:28:19.109Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if true;\r\n  \r\n      allow write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          debug(debug(ratingId.replace('.{20}','')).size == 1) &&(\r\n          (resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T02:28:19.127Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T02:28:19.127Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T02:28:42.184Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T02:28:42.184Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if true;\r\n  \r\n      allow write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          debug(debug(ratingId.replace('.{20}','')).size == 28) &&(\r\n          (resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T02:28:42.203Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T02:28:42.203Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T02:28:42.364Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T02:28:42.364Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if true;\r\n  \r\n      allow write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          debug(debug(ratingId.replace('.{20}','')).size == 28) &&(\r\n          (resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T02:28:42.381Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T02:28:42.381Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T02:29:10.170Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T02:29:10.170Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if true;\r\n  \r\n      allow write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          debug(debug(ratingId.replace('.{20}','')).size() == 28) &&(\r\n          (resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T02:29:10.188Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T02:29:10.188Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T02:29:10.372Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T02:29:10.372Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if true;\r\n  \r\n      allow write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          debug(debug(ratingId.replace('.{20}','')).size() == 28) &&(\r\n          (resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T02:29:10.389Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T02:29:10.389Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T02:29:22.034Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T02:29:22.034Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if true;\r\n  \r\n      allow write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          debug(debug(ratingId.replace('.{20}','')).sizae() == 28) &&(\r\n          (resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T02:29:22.053Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T02:29:22.053Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":29,"column":53,"currentOffset":1047,"endOffset":1051},"description":"Invalid function name: sizae.","severity":"WARNING"}]}
[warn] !  firestore.rules:29:53 - WARNING Invalid function name: sizae. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T02:29:23.176Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T02:29:23.176Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if true;\r\n  \r\n      allow write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          debug(debug(ratingId.replace('.{20}','')).sizae() == 28) &&(\r\n          (resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T02:29:23.197Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T02:29:23.197Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":29,"column":53,"currentOffset":1047,"endOffset":1051},"description":"Invalid function name: sizae.","severity":"WARNING"}]}
[warn] !  firestore.rules:29:53 - WARNING Invalid function name: sizae. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T02:29:24.354Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T02:29:24.354Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if true;\r\n  \r\n      allow write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          debug(debug(ratingId.replace('.{20}','')).size() == 28) &&(\r\n          (resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T02:29:24.370Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T02:29:24.370Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T02:29:28.031Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T02:29:28.031Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if true;\r\n  \r\n      allow write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          debug(debug(ratingId.replace('.{20}','')).size() == 0) &&(\r\n          (resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T02:29:28.048Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T02:29:28.048Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T02:29:48.245Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T02:29:48.245Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if true;\r\n  \r\n      allow write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          debug(true) &&(\r\n          (resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T02:29:48.262Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T02:29:48.263Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T02:29:53.853Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T02:29:53.853Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if true;\r\n  \r\n      allow write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          debug(debug(ratingId.replace('.{20}','')).size() == 0) &&(\r\n          (resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T02:29:53.869Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T02:29:53.869Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T02:30:12.176Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T02:30:12.176Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if true;\r\n  \r\n      allow write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          debug(debug(ratingId.replace('.{20}','')).size() == 48) &&(\r\n          (resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T02:30:12.191Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T02:30:12.192Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T02:30:18.709Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T02:30:18.709Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if true;\r\n  \r\n      allow write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          debug(debug(ratingId.replace('.{20}','')).size() == 0) &&(\r\n          (resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T02:30:18.725Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T02:30:18.725Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T02:35:27.392Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T02:35:27.392Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if true;\r\n  \r\n      allow write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          debug(ratingId.replace('.{20}','').size() == 0) &&(\r\n          (resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T02:35:27.409Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T02:35:27.409Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T02:35:39.126Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T02:35:39.126Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if true;\r\n  \r\n      allow write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          debug(ratingId.replace('.{20}','').size() == 28) &&(\r\n          (resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T02:35:39.141Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T02:35:39.141Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T02:40:19.006Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T02:40:19.006Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if true;\r\n  \r\n      allow write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          debug(ratingId.replace('.{20}','') == '') &&(\r\n          (resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T02:40:19.023Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T02:40:19.023Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T02:40:36.635Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T02:40:36.635Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if true;\r\n  \r\n      allow write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          debug(ratingId.replace('.{20}','') == ratingId.replace('.{20}','')) &&(\r\n          (resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T02:40:36.654Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T02:40:36.654Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T02:40:45.540Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T02:40:45.540Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if true;\r\n  \r\n      allow write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          debug(ratingId.replace('.{20}','') == ratingId.replace('.{20}','') ) &&(\r\n          (resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T02:40:45.555Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T02:40:45.555Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T02:40:56.549Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T02:40:56.550Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if true;\r\n  \r\n      allow write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          debug(ratingId.replace('.{20}','') == ratingId.replace('.{10}','') ) &&(\r\n          (resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T02:40:56.568Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T02:40:56.568Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T02:41:48.917Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T02:41:48.917Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if true;\r\n  \r\n      allow write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          debug(ratingId.replace('^.{20}','') == ratingId.replace('.{10}','') ) &&(\r\n          (resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T02:41:48.934Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T02:41:48.934Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T02:42:01.017Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T02:42:01.017Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if true;\r\n  \r\n      allow write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          debug(ratingId.replace('^.{20}','') == ratingId.replace('^.{10}','') ) &&(\r\n          (resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T02:42:01.034Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T02:42:01.034Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T02:42:24.798Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T02:42:24.798Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if true;\r\n  \r\n      allow write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          debug(ratingId.replace('^.{20}','') == auth.uid ) &&(\r\n          (resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T02:42:24.814Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T02:42:24.814Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":29,"column":50,"currentOffset":1044,"endOffset":1047},"description":"Invalid variable name: auth.","severity":"WARNING"}]}
[warn] !  firestore.rules:29:50 - WARNING Invalid variable name: auth. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T02:42:33.918Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T02:42:33.918Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if true;\r\n  \r\n      allow write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          debug(ratingId.replace('^.{20}','') == request.auth.uid ) &&(\r\n          (resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T02:42:33.933Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T02:42:33.933Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T02:43:09.252Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T02:43:09.252Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if true;\r\n  \r\n      allow write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&& (\r\n          (resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T02:43:09.274Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T02:43:09.274Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[debug] [2023-01-16T02:59:08.320Z] ----------------------------------------------------------------------
[debug] [2023-01-16T02:59:08.322Z] Command:       C:\Program Files\nodejs\node.exe C:\Users\Sylay\AppData\Roaming\npm\node_modules\firebase-tools\lib\bin\firebase.js emulators:start
[debug] [2023-01-16T02:59:08.322Z] CLI Version:   11.20.0
[debug] [2023-01-16T02:59:08.322Z] Platform:      win32
[debug] [2023-01-16T02:59:08.322Z] Node Version:  v16.14.2
[debug] [2023-01-16T02:59:08.335Z] Time:          Mon Jan 16 2023 03:59:08 GMT+0100 (Central European Standard Time)
[debug] [2023-01-16T02:59:08.335Z] ----------------------------------------------------------------------
[debug] 
[debug] [2023-01-16T02:59:08.407Z] Object "" in "firebase.json" has unknown property: {"additionalProperty":"react-native"}
[debug] [2023-01-16T02:59:08.412Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2023-01-16T02:59:08.413Z] > authorizing via signed-in user (sylaypaper@gmail.com)
[debug] [2023-01-16T02:59:08.551Z] java version "18.0.2" 2022-07-19

[debug] [2023-01-16T02:59:08.552Z] Java(TM) SE Runtime Environment (build 18.0.2+9-61)
Java HotSpot(TM) 64-Bit Server VM (build 18.0.2+9-61, mixed mode, sharing)

[debug] [2023-01-16T02:59:08.564Z] Parsed Java major version: 18
[info] i  emulators: Starting emulators: firestore, storage {"metadata":{"emulator":{"name":"hub"},"message":"Starting emulators: firestore, storage"}}
[debug] [2023-01-16T02:59:08.580Z] [logging] Logging Emulator only supports listening on one address (127.0.0.1). Not listening on ::1
[debug] [2023-01-16T02:59:08.581Z] [firestore] Firestore Emulator only supports listening on one address (127.0.0.1). Not listening on ::1
[debug] [2023-01-16T02:59:08.581Z] [firestore.websocket] websocket server for firestore only supports listening on one address (127.0.0.1). Not listening on ::1
[debug] [2023-01-16T02:59:08.581Z] [storage] Storage Emulator only supports listening on one address (127.0.0.1). Not listening on ::1
[debug] [2023-01-16T02:59:08.581Z] assigned listening specs for emulators {"user":{"hub":[{"address":"127.0.0.1","family":"IPv4","port":4400},{"address":"::1","family":"IPv6","port":4400}],"ui":[{"address":"127.0.0.1","family":"IPv4","port":9999},{"address":"::1","family":"IPv6","port":9999}],"logging":[{"address":"127.0.0.1","family":"IPv4","port":4500}],"firestore":[{"address":"127.0.0.1","family":"IPv4","port":8081}],"firestore.websocket":[{"address":"127.0.0.1","family":"IPv4","port":9150}],"storage":[{"address":"127.0.0.1","family":"IPv4","port":9199}]},"metadata":{"message":"assigned listening specs for emulators"}}
[warn] !  emulators: It seems that you are running multiple instances of the emulator suite for project ***REMOVED***. This may result in unexpected behavior. 
[debug] [2023-01-16T02:59:08.588Z] [hub] writing locator at C:\Users\Sylay\AppData\Local\Temp\hub-***REMOVED***.json
[debug] [2023-01-16T02:59:08.599Z] Ignoring unsupported arg: auto_download {"metadata":{"emulator":{"name":"firestore"},"message":"Ignoring unsupported arg: auto_download"}}
[debug] [2023-01-16T02:59:08.599Z] Ignoring unsupported arg: single_project_mode_error {"metadata":{"emulator":{"name":"firestore"},"message":"Ignoring unsupported arg: single_project_mode_error"}}
[debug] [2023-01-16T02:59:08.599Z] Starting Firestore Emulator with command {"binary":"java","args":["-Dgoogle.cloud_firestore.debug_log_level=FINE","-Duser.language=en","-jar","C:\\Users\\Sylay\\.cache\\firebase\\emulators\\cloud-firestore-emulator-v1.15.1.jar","--host","127.0.0.1","--port",8081,"--websocket_port",9150,"--project_id","***REMOVED***","--rules","C:\\Users\\Sylay\\Documents\\GitHub\\geolocationtest\\health-pathes\\firestore.rules","--single_project_mode",true],"optionalArgs":["port","webchannel_port","host","rules","websocket_port","functions_emulator","seed_from_export","project_id","single_project_mode"],"joinArgs":false} {"metadata":{"emulator":{"name":"firestore"},"message":"Starting Firestore Emulator with command {\"binary\":\"java\",\"args\":[\"-Dgoogle.cloud_firestore.debug_log_level=FINE\",\"-Duser.language=en\",\"-jar\",\"C:\\\\Users\\\\Sylay\\\\.cache\\\\firebase\\\\emulators\\\\cloud-firestore-emulator-v1.15.1.jar\",\"--host\",\"127.0.0.1\",\"--port\",8081,\"--websocket_port\",9150,\"--project_id\",\"***REMOVED***\",\"--rules\",\"C:\\\\Users\\\\Sylay\\\\Documents\\\\GitHub\\\\geolocationtest\\\\health-pathes\\\\firestore.rules\",\"--single_project_mode\",true],\"optionalArgs\":[\"port\",\"webchannel_port\",\"host\",\"rules\",\"websocket_port\",\"functions_emulator\",\"seed_from_export\",\"project_id\",\"single_project_mode\"],\"joinArgs\":false}"}}
[info] i  firestore: Firestore Emulator logging to firestore-debug.log {"metadata":{"emulator":{"name":"firestore"},"message":"Firestore Emulator logging to \u001b[1mfirestore-debug.log\u001b[22m"}}
[info] +  firestore: Firestore Emulator UI websocket is running on 9150. {"metadata":{"emulator":{"name":"firestore"},"message":"Firestore Emulator UI websocket is running on 9150."}}
[debug] [2023-01-16T02:59:10.626Z] Ignoring unsupported arg: port {"metadata":{"emulator":{"name":"storage"},"message":"Ignoring unsupported arg: port"}}
[debug] [2023-01-16T02:59:11.523Z] Temp file directory for storage emulator: C:\Users\Sylay\AppData\Local\Temp/firebase/storage/blobs {"metadata":{"emulator":{"name":"storage"},"message":"Temp file directory for storage emulator: C:\\Users\\Sylay\\AppData\\Local\\Temp/firebase/storage/blobs"}}
[debug] [2023-01-16T02:59:11.532Z] Ignoring unsupported arg: auto_download {"metadata":{"emulator":{"name":"ui"},"message":"Ignoring unsupported arg: auto_download"}}
[debug] [2023-01-16T02:59:11.532Z] Ignoring unsupported arg: port {"metadata":{"emulator":{"name":"ui"},"message":"Ignoring unsupported arg: port"}}
[debug] [2023-01-16T02:59:11.532Z] Starting Emulator UI with command {"binary":"node","args":["C:\\Users\\Sylay\\.cache\\firebase\\emulators\\ui-v1.11.2\\server\\server.js"],"optionalArgs":[],"joinArgs":false} {"metadata":{"emulator":{"name":"ui"},"message":"Starting Emulator UI with command {\"binary\":\"node\",\"args\":[\"C:\\\\Users\\\\Sylay\\\\.cache\\\\firebase\\\\emulators\\\\ui-v1.11.2\\\\server\\\\server.js\"],\"optionalArgs\":[],\"joinArgs\":false}"}}
[info] i  ui: Emulator UI logging to ui-debug.log {"metadata":{"emulator":{"name":"ui"},"message":"Emulator UI logging to \u001b[1mui-debug.log\u001b[22m"}}
[debug] [2023-01-16T02:59:11.671Z] Web / API server started at 127.0.0.1:9999
 {"metadata":{"emulator":{"name":"ui"},"message":"Web / API server started at 127.0.0.1:9999\n"}}
[debug] [2023-01-16T02:59:11.672Z] Web / API server started at ::1:9999
 {"metadata":{"emulator":{"name":"ui"},"message":"Web / API server started at ::1:9999\n"}}
[info] 
┌─────────────────────────────────────────────────────────────┐
│ ✔  All emulators ready! It is now safe to connect your app. │
│ i  View Emulator UI at http://127.0.0.1:9999/               │
└─────────────────────────────────────────────────────────────┘

┌───────────┬────────────────┬─────────────────────────────────┐
│ Emulator  │ Host:Port      │ View in Emulator UI             │
├───────────┼────────────────┼─────────────────────────────────┤
│ Firestore │ 127.0.0.1:8081 │ http://127.0.0.1:9999/firestore │
├───────────┼────────────────┼─────────────────────────────────┤
│ Storage   │ 127.0.0.1:9199 │ http://127.0.0.1:9999/storage   │
└───────────┴────────────────┴─────────────────────────────────┘
  Emulator Hub running at 127.0.0.1:4400
  Other reserved ports: 4500, 9150

Issues? Report them at https://github.com/firebase/firebase-tools/issues and attach the *-debug.log files.
 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T03:12:30.137Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T03:12:30.137Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if true;\r\n  \r\n      allow write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&& (\r\n          (resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T03:12:30.252Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T03:12:30.252Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T03:12:53.447Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T03:12:53.447Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if true;\r\n  \r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow read, write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&& (\r\n          (resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T03:12:53.482Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T03:12:53.482Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T03:12:54.260Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T03:12:54.260Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if true;\r\n  \r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow read, write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&& (\r\n          (resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T03:12:54.293Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T03:12:54.293Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T03:13:19.536Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T03:13:19.536Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if resource.data.visibility == 'public';\r\n  \r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow read, write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&& (\r\n          (resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T03:13:19.563Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T03:13:19.563Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T03:13:23.025Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T03:13:23.025Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if resource.data.visibility == 'public';\r\n  \r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow read, write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&& (\r\n          (resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T03:13:23.050Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T03:13:23.050Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T03:16:34.390Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T03:16:34.390Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if resource.data.visibility == 'public';\r\n  \r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow read, write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&& (\r\n          (resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T03:16:34.416Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T03:16:34.416Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T03:22:31.618Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T03:22:31.618Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if resource.data.visibility == 'public';\r\n  \r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow read, write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&&\r\n          request.data.pathId == ratingId.match('^.{20}');\r\n           (\r\n          (resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T03:22:31.676Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T03:22:31.676Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":30,"column":48,"currentOffset":1149,"endOffset":1149},"description":"Unexpected '('.","severity":"ERROR"}]}
[warn] !  firestore.rules:30:48 - ERROR Unexpected '('. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T03:24:54.309Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T03:24:54.310Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if resource.data.visibility == 'public';\r\n  \r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow read, write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&&\r\n          request.data.pathId == ratingId.match('^.{20}');\r\n           (\r\n          (resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T03:24:54.329Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T03:24:54.329Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":30,"column":48,"currentOffset":1149,"endOffset":1149},"description":"Unexpected '('.","severity":"ERROR"}]}
[warn] !  firestore.rules:30:48 - ERROR Unexpected '('. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T03:25:19.964Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T03:25:19.964Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if resource.data.visibility == 'public';\r\n  \r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow read, write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&&\r\n          request.data.pathId == ratingId.replace('.{20}$','');\r\n           (\r\n          (resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T03:25:19.984Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T03:25:19.984Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":31,"column":12,"currentOffset":1178,"endOffset":1178},"description":"Unexpected '('.","severity":"ERROR"}]}
[warn] !  firestore.rules:31:12 - ERROR Unexpected '('. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T03:25:21.765Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T03:25:21.765Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if resource.data.visibility == 'public';\r\n  \r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow read, write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&&\r\n          request.data.pathId == ratingId.replace('.{20}$','');\r\n           (\r\n          (resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T03:25:21.783Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T03:25:21.783Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":31,"column":12,"currentOffset":1178,"endOffset":1178},"description":"Unexpected '('.","severity":"ERROR"}]}
[warn] !  firestore.rules:31:12 - ERROR Unexpected '('. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T03:25:33.698Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T03:25:33.698Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if resource.data.visibility == 'public';\r\n  \r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow read, write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&&\r\n          request.data.pathId == ratingId.replace('.{20}$','')&&\r\n           ((resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T03:25:33.722Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T03:25:33.722Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T03:25:48.105Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T03:25:48.105Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if resource.data.visibility == 'public';\r\n  \r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow read, write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&&\r\n          request.data.pathId == ratingId.replace('.{28}$','')&&\r\n           ((resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T03:25:48.132Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T03:25:48.132Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T03:25:51.311Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T03:25:51.311Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if resource.data.visibility == 'public';\r\n  \r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow read, write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&&\r\n          request.data.pathId == ratingId.replace('.{28}$','')&&\r\n           ((resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T03:25:51.332Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T03:25:51.332Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T03:25:51.497Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T03:25:51.497Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if resource.data.visibility == 'public';\r\n  \r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow read, write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&&\r\n          request.data.pathId == ratingId.replace('.{28}$','')&&\r\n           ((resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T03:25:51.517Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T03:25:51.517Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T03:25:51.674Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T03:25:51.674Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if resource.data.visibility == 'public';\r\n  \r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow read, write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&&\r\n          request.data.pathId == ratingId.replace('.{28}$','')&&\r\n           ((resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T03:25:51.695Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T03:25:51.695Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[debug] [2023-01-16T03:32:01.796Z] ----------------------------------------------------------------------
[debug] [2023-01-16T03:32:01.798Z] Command:       C:\Program Files\nodejs\node.exe C:\Users\Sylay\AppData\Roaming\npm\node_modules\firebase-tools\lib\bin\firebase.js emulators:start
[debug] [2023-01-16T03:32:01.799Z] CLI Version:   11.20.0
[debug] [2023-01-16T03:32:01.799Z] Platform:      win32
[debug] [2023-01-16T03:32:01.799Z] Node Version:  v16.14.2
[debug] [2023-01-16T03:32:01.813Z] Time:          Mon Jan 16 2023 04:32:01 GMT+0100 (Central European Standard Time)
[debug] [2023-01-16T03:32:01.813Z] ----------------------------------------------------------------------
[debug] 
[debug] [2023-01-16T03:32:01.880Z] Object "" in "firebase.json" has unknown property: {"additionalProperty":"react-native"}
[debug] [2023-01-16T03:32:01.886Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2023-01-16T03:32:01.886Z] > authorizing via signed-in user (sylaypaper@gmail.com)
[debug] [2023-01-16T03:32:01.995Z] java version "18.0.2" 2022-07-19

[debug] [2023-01-16T03:32:01.996Z] Java(TM) SE Runtime Environment (build 18.0.2+9-61)
Java HotSpot(TM) 64-Bit Server VM (build 18.0.2+9-61, mixed mode, sharing)

[debug] [2023-01-16T03:32:02.008Z] Parsed Java major version: 18
[info] i  emulators: Starting emulators: firestore, storage {"metadata":{"emulator":{"name":"hub"},"message":"Starting emulators: firestore, storage"}}
[debug] [2023-01-16T03:32:02.024Z] [logging] Logging Emulator only supports listening on one address (127.0.0.1). Not listening on ::1
[debug] [2023-01-16T03:32:02.025Z] [firestore] Firestore Emulator only supports listening on one address (127.0.0.1). Not listening on ::1
[debug] [2023-01-16T03:32:02.025Z] [firestore.websocket] websocket server for firestore only supports listening on one address (127.0.0.1). Not listening on ::1
[debug] [2023-01-16T03:32:02.025Z] [storage] Storage Emulator only supports listening on one address (127.0.0.1). Not listening on ::1
[debug] [2023-01-16T03:32:02.025Z] assigned listening specs for emulators {"user":{"hub":[{"address":"127.0.0.1","family":"IPv4","port":4400},{"address":"::1","family":"IPv6","port":4400}],"ui":[{"address":"127.0.0.1","family":"IPv4","port":9999},{"address":"::1","family":"IPv6","port":9999}],"logging":[{"address":"127.0.0.1","family":"IPv4","port":4500}],"firestore":[{"address":"127.0.0.1","family":"IPv4","port":8081}],"firestore.websocket":[{"address":"127.0.0.1","family":"IPv4","port":9150}],"storage":[{"address":"127.0.0.1","family":"IPv4","port":9199}]},"metadata":{"message":"assigned listening specs for emulators"}}
[warn] !  emulators: It seems that you are running multiple instances of the emulator suite for project ***REMOVED***. This may result in unexpected behavior. 
[debug] [2023-01-16T03:32:02.032Z] [hub] writing locator at C:\Users\Sylay\AppData\Local\Temp\hub-***REMOVED***.json
[debug] [2023-01-16T03:32:02.045Z] Ignoring unsupported arg: auto_download {"metadata":{"emulator":{"name":"firestore"},"message":"Ignoring unsupported arg: auto_download"}}
[debug] [2023-01-16T03:32:02.045Z] Ignoring unsupported arg: single_project_mode_error {"metadata":{"emulator":{"name":"firestore"},"message":"Ignoring unsupported arg: single_project_mode_error"}}
[debug] [2023-01-16T03:32:02.045Z] Starting Firestore Emulator with command {"binary":"java","args":["-Dgoogle.cloud_firestore.debug_log_level=FINE","-Duser.language=en","-jar","C:\\Users\\Sylay\\.cache\\firebase\\emulators\\cloud-firestore-emulator-v1.15.1.jar","--host","127.0.0.1","--port",8081,"--websocket_port",9150,"--project_id","***REMOVED***","--rules","C:\\Users\\Sylay\\Documents\\GitHub\\geolocationtest\\health-pathes\\firestore.rules","--single_project_mode",true],"optionalArgs":["port","webchannel_port","host","rules","websocket_port","functions_emulator","seed_from_export","project_id","single_project_mode"],"joinArgs":false} {"metadata":{"emulator":{"name":"firestore"},"message":"Starting Firestore Emulator with command {\"binary\":\"java\",\"args\":[\"-Dgoogle.cloud_firestore.debug_log_level=FINE\",\"-Duser.language=en\",\"-jar\",\"C:\\\\Users\\\\Sylay\\\\.cache\\\\firebase\\\\emulators\\\\cloud-firestore-emulator-v1.15.1.jar\",\"--host\",\"127.0.0.1\",\"--port\",8081,\"--websocket_port\",9150,\"--project_id\",\"***REMOVED***\",\"--rules\",\"C:\\\\Users\\\\Sylay\\\\Documents\\\\GitHub\\\\geolocationtest\\\\health-pathes\\\\firestore.rules\",\"--single_project_mode\",true],\"optionalArgs\":[\"port\",\"webchannel_port\",\"host\",\"rules\",\"websocket_port\",\"functions_emulator\",\"seed_from_export\",\"project_id\",\"single_project_mode\"],\"joinArgs\":false}"}}
[info] i  firestore: Firestore Emulator logging to firestore-debug.log {"metadata":{"emulator":{"name":"firestore"},"message":"Firestore Emulator logging to \u001b[1mfirestore-debug.log\u001b[22m"}}
[info] +  firestore: Firestore Emulator UI websocket is running on 9150. {"metadata":{"emulator":{"name":"firestore"},"message":"Firestore Emulator UI websocket is running on 9150."}}
[debug] [2023-01-16T03:32:04.319Z] Ignoring unsupported arg: port {"metadata":{"emulator":{"name":"storage"},"message":"Ignoring unsupported arg: port"}}
[debug] [2023-01-16T03:32:05.210Z] Temp file directory for storage emulator: C:\Users\Sylay\AppData\Local\Temp/firebase/storage/blobs {"metadata":{"emulator":{"name":"storage"},"message":"Temp file directory for storage emulator: C:\\Users\\Sylay\\AppData\\Local\\Temp/firebase/storage/blobs"}}
[debug] [2023-01-16T03:32:05.220Z] Ignoring unsupported arg: auto_download {"metadata":{"emulator":{"name":"ui"},"message":"Ignoring unsupported arg: auto_download"}}
[debug] [2023-01-16T03:32:05.221Z] Ignoring unsupported arg: port {"metadata":{"emulator":{"name":"ui"},"message":"Ignoring unsupported arg: port"}}
[debug] [2023-01-16T03:32:05.221Z] Starting Emulator UI with command {"binary":"node","args":["C:\\Users\\Sylay\\.cache\\firebase\\emulators\\ui-v1.11.2\\server\\server.js"],"optionalArgs":[],"joinArgs":false} {"metadata":{"emulator":{"name":"ui"},"message":"Starting Emulator UI with command {\"binary\":\"node\",\"args\":[\"C:\\\\Users\\\\Sylay\\\\.cache\\\\firebase\\\\emulators\\\\ui-v1.11.2\\\\server\\\\server.js\"],\"optionalArgs\":[],\"joinArgs\":false}"}}
[info] i  ui: Emulator UI logging to ui-debug.log {"metadata":{"emulator":{"name":"ui"},"message":"Emulator UI logging to \u001b[1mui-debug.log\u001b[22m"}}
[debug] [2023-01-16T03:32:05.367Z] Web / API server started at 127.0.0.1:9999
 {"metadata":{"emulator":{"name":"ui"},"message":"Web / API server started at 127.0.0.1:9999\n"}}
[debug] [2023-01-16T03:32:05.367Z] Web / API server started at ::1:9999
 {"metadata":{"emulator":{"name":"ui"},"message":"Web / API server started at ::1:9999\n"}}
[info] 
┌─────────────────────────────────────────────────────────────┐
│ ✔  All emulators ready! It is now safe to connect your app. │
│ i  View Emulator UI at http://127.0.0.1:9999/               │
└─────────────────────────────────────────────────────────────┘

┌───────────┬────────────────┬─────────────────────────────────┐
│ Emulator  │ Host:Port      │ View in Emulator UI             │
├───────────┼────────────────┼─────────────────────────────────┤
│ Firestore │ 127.0.0.1:8081 │ http://127.0.0.1:9999/firestore │
├───────────┼────────────────┼─────────────────────────────────┤
│ Storage   │ 127.0.0.1:9199 │ http://127.0.0.1:9999/storage   │
└───────────┴────────────────┴─────────────────────────────────┘
  Emulator Hub running at 127.0.0.1:4400
  Other reserved ports: 4500, 9150

Issues? Report them at https://github.com/firebase/firebase-tools/issues and attach the *-debug.log files.
 
[debug] [2023-01-16T03:32:59.975Z] > refreshing access token with scopes: []
[debug] [2023-01-16T03:32:59.977Z] >>> [apiv2][query] POST https://www.googleapis.com/oauth2/v3/token [none]
[debug] [2023-01-16T03:32:59.977Z] >>> [apiv2][body] POST https://www.googleapis.com/oauth2/v3/token [omitted]
[debug] [2023-01-16T03:33:00.185Z] <<< [apiv2][status] POST https://www.googleapis.com/oauth2/v3/token 200
[debug] [2023-01-16T03:33:00.186Z] <<< [apiv2][body] POST https://www.googleapis.com/oauth2/v3/token [omitted]
[debug] [2023-01-16T03:33:00.197Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects/***REMOVED***/adminSdkConfig [none]
[debug] [2023-01-16T03:33:00.553Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects/***REMOVED***/adminSdkConfig 200
[debug] [2023-01-16T03:33:00.554Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects/***REMOVED***/adminSdkConfig {"projectId":"***REMOVED***","databaseURL":"https://***REMOVED***-default-rtdb.europe-west1.firebasedatabase.app","storageBucket":"***REMOVED***.appspot.com","locationId":"europe-west"}
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T03:35:49.851Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T03:35:49.851Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if resource.data.visibility == 'public'||resource == null;\r\n  \r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow read, write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&&\r\n          request.data.pathId == ratingId.replace('.{28}$','')&&\r\n           ((resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T03:35:49.919Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T03:35:49.919Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T03:37:24.759Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T03:37:24.759Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if resource.data.visibility == 'public'||resource == null;\r\n  \r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow read, write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&&\r\n          request.data.pathId == ratingId.replace('.{28}$','')&&\r\n           ((resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T03:37:24.792Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T03:37:24.793Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T03:37:24.937Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T03:37:24.938Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if resource.data.visibility == 'public'||resource == null;\r\n  \r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow read, write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&&\r\n          request.data.pathId == ratingId.replace('.{28}$','')&&\r\n           ((resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T03:37:24.970Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T03:37:24.970Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T03:37:25.091Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T03:37:25.091Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if resource.data.visibility == 'public'||resource == null;\r\n  \r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow read, write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&&\r\n          request.data.pathId == ratingId.replace('.{28}$','')&&\r\n           ((resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T03:37:25.118Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T03:37:25.118Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T03:37:35.012Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T03:37:35.012Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if resource.data.visibility == 'public'||resource == null;\r\n  \r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow read, write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&&\r\n          \"\" == ratingId.replace('.{28}$','')&&\r\n           ((resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T03:37:35.038Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T03:37:35.038Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T03:37:42.599Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T03:37:42.600Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if resource.data.visibility == 'public'||resource == null;\r\n  \r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow read, write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&&\r\n          \"request.data.pathId\" == ratingId.replace('.{28}$','')&&\r\n           ((resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T03:37:42.624Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T03:37:42.624Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T03:37:43.271Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T03:37:43.271Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if resource.data.visibility == 'public'||resource == null;\r\n  \r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow read, write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&&\r\n          request.data.pathId == ratingId.replace('.{28}$','')&&\r\n           ((resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T03:37:43.302Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T03:37:43.302Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T03:38:07.488Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T03:38:07.488Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if resource.data.visibility == 'public'||resource == null;\r\n  \r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow read, write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&&\r\n          ratingId.replace('.{28}$','') ==request.data.pathId &&\r\n           ((resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T03:38:07.512Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T03:38:07.513Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T03:38:24.199Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T03:38:24.199Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if resource.data.visibility == 'public'||resource == null;\r\n  \r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow read, write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&&\r\n          ratingId.replace('.{28}$','') ==request.data.pathId &&\r\n           ((resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T03:38:24.221Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T03:38:24.222Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T03:39:58.945Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T03:39:58.945Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if resource.data.visibility == 'public'||resource == null;\r\n  \r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow read, write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&&\r\n          ratingId.replace('.{28}$','') ==request.data.mapId &&\r\n           ((resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T03:39:58.969Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T03:39:58.970Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T03:40:20.728Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T03:40:20.728Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if resource.data.visibility == 'public'||resource == null;\r\n  \r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow read, write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&&\r\n          ratingId.replace('.{28}$','') ==request.data.mapId &&\r\n           ((resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T03:40:20.753Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T03:40:20.754Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T03:40:20.898Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T03:40:20.898Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if resource.data.visibility == 'public'||resource == null;\r\n  \r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow read, write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&&\r\n          ratingId.replace('.{28}$','') ==request.data.mapId &&\r\n           ((resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T03:40:20.918Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T03:40:20.918Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T03:40:21.050Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T03:40:21.050Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if resource.data.visibility == 'public'||resource == null;\r\n  \r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow read, write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&&\r\n          ratingId.replace('.{28}$','') ==request.data.mapId &&\r\n           ((resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T03:40:21.070Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T03:40:21.070Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T03:41:38.547Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T03:41:38.548Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if resource.data.visibility == 'public'||resource == null;\r\n  \r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow read, write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&&\r\n          ratingId.replace('.{28}$','') == request.data.mapId &&\r\n           ((resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T03:41:38.577Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T03:41:38.577Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T03:42:23.469Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T03:42:23.469Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if resource.data.visibility == 'public'||resource == null;\r\n  \r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow read, write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&&\r\n          // ratingId.replace('.{28}$','') == request.data.mapId &&\r\n           ((resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T03:42:23.490Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T03:42:23.491Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T03:42:29.188Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T03:42:29.189Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if resource.data.visibility == 'public'||resource == null;\r\n  \r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow read, write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&&\r\n          ratingId.replace('.{28}$','') == request.data.mapId &&\r\n           ((resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T03:42:29.207Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T03:42:29.207Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T03:47:21.014Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T03:47:21.014Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if resource.data.visibility == 'public'||resource == null;\r\n  \r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow read, write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&&\r\n          ratingId.replace('(?:.{20}).*','') == request.data.mapId &&\r\n           ((resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T03:47:21.036Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T03:47:21.037Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T03:51:41.498Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T03:51:41.498Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if resource.data.visibility == 'public'||resource == null;\r\n  \r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow read, write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&&\r\n          ratingId.replace('(?:.{20}).*','') == request.data.mapId &&\r\n           ((resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T03:51:41.522Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T03:51:41.522Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T03:52:12.687Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T03:52:12.687Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if resource.data.visibility == 'public'||resource == null;\r\n  \r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow read, write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&&\r\n          // ratingId.replace('(?:.{20}).*',''). == request.data.mapId &&\r\n          ratingId.size == 48 &&\r\n           ((resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T03:52:12.713Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T03:52:12.713Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":31,"column":11,"currentOffset":1205,"endOffset":1212},"description":"Invalid type. Received one of [string]. Expected one of [map].","severity":"WARNING"},{"sourcePosition":{"fileName":"security.rules","line":31,"column":11,"currentOffset":1205,"endOffset":1212},"description":"Invalid type. There is no type for variable 'ratingId' that satisfies all clauses.","severity":"WARNING"}]}
[warn] !  firestore.rules:31:11 - WARNING Invalid type. Received one of [string]. Expected one of [map]. 
[warn] !  firestore.rules:31:11 - WARNING Invalid type. There is no type for variable 'ratingId' that satisfies all clauses. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T03:52:18.804Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T03:52:18.804Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if resource.data.visibility == 'public'||resource == null;\r\n  \r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow read, write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&&\r\n          // ratingId.replace('(?:.{20}).*',''). == request.data.mapId &&\r\n          // ratingId.size == 48 &&\r\n           ((resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T03:52:18.833Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T03:52:18.833Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T03:52:23.978Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T03:52:23.978Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if resource.data.visibility == 'public'||resource == null;\r\n  \r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow read, write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&&\r\n          // ratingId.replace('(?:.{20}).*',''). == request.data.mapId &&\r\n          ratingId.size == 48 &&\r\n           ((resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T03:52:23.997Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T03:52:23.997Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":31,"column":11,"currentOffset":1205,"endOffset":1212},"description":"Invalid type. Received one of [string]. Expected one of [map].","severity":"WARNING"},{"sourcePosition":{"fileName":"security.rules","line":31,"column":11,"currentOffset":1205,"endOffset":1212},"description":"Invalid type. There is no type for variable 'ratingId' that satisfies all clauses.","severity":"WARNING"}]}
[warn] !  firestore.rules:31:11 - WARNING Invalid type. Received one of [string]. Expected one of [map]. 
[warn] !  firestore.rules:31:11 - WARNING Invalid type. There is no type for variable 'ratingId' that satisfies all clauses. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T03:52:26.747Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T03:52:26.748Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if resource.data.visibility == 'public'||resource == null;\r\n  \r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow read, write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&&\r\n          // ratingId.replace('(?:.{20}).*',''). == request.data.mapId &&\r\n          ratingId.size == 48 &&\r\n           ((resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T03:52:26.764Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T03:52:26.764Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":31,"column":11,"currentOffset":1205,"endOffset":1212},"description":"Invalid type. Received one of [string]. Expected one of [map].","severity":"WARNING"},{"sourcePosition":{"fileName":"security.rules","line":31,"column":11,"currentOffset":1205,"endOffset":1212},"description":"Invalid type. There is no type for variable 'ratingId' that satisfies all clauses.","severity":"WARNING"}]}
[warn] !  firestore.rules:31:11 - WARNING Invalid type. Received one of [string]. Expected one of [map]. 
[warn] !  firestore.rules:31:11 - WARNING Invalid type. There is no type for variable 'ratingId' that satisfies all clauses. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T03:52:33.557Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T03:52:33.557Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if resource.data.visibility == 'public'||resource == null;\r\n  \r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow read, write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&&\r\n          // ratingId.replace('(?:.{20}).*',''). == request.data.mapId &&\r\n          ratingId.size() == 48 &&\r\n           ((resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T03:52:33.575Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T03:52:33.576Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T03:52:34.289Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T03:52:34.289Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if resource.data.visibility == 'public'||resource == null;\r\n  \r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow read, write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&&\r\n          // ratingId.replace('(?:.{20}).*',''). == request.data.mapId &&\r\n          ratingId.size() == 48 &&\r\n           ((resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T03:52:34.305Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T03:52:34.305Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T03:53:01.038Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T03:53:01.038Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if resource.data.visibility == 'public'||resource == null;\r\n  \r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow read, write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&&\r\n          // ratingId.replace('(?:.{20}).*',''). == request.data.mapId &&\r\n          ratingId.replace('.','').size() == 0 &&\r\n           ((resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T03:53:01.054Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T03:53:01.054Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T03:53:30.029Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T03:53:30.029Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if resource.data.visibility == 'public'||resource == null;\r\n  \r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow read, write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&&\r\n          // ratingId.replace('(?:.{20}).*',''). == request.data.mapId &&\r\n          ratingId.replace('^.{20}','').size() == 28 &&\r\n           ((resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T03:53:30.045Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T03:53:30.045Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T03:53:46.389Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T03:53:46.389Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if resource.data.visibility == 'public'||resource == null;\r\n  \r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow read, write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&&\r\n          // ratingId.replace('(?:.{20}).*',''). == request.data.mapId &&\r\n          ratingId.replace('.{20}$','').size() == 28 &&\r\n           ((resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T03:53:46.406Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T03:53:46.406Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T03:53:54.182Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T03:53:54.183Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if resource.data.visibility == 'public'||resource == null;\r\n  \r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow read, write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&&\r\n          // ratingId.replace('(?:.{20}).*',''). == request.data.mapId &&\r\n          ratingId.replace('.{28}$','').size() == 20 &&\r\n           ((resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T03:53:54.198Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T03:53:54.198Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T03:54:43.021Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T03:54:43.021Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if resource.data.visibility == 'public'||resource == null;\r\n  \r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow read, write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&&\r\n          // ratingId.replace('(?:.{20}).*',''). == request.data.mapId &&\r\n          ratingId.replace('.{28}$','') == request.data.mapId &&\r\n           ((resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T03:54:43.037Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T03:54:43.037Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T03:54:44.618Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T03:54:44.618Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if resource.data.visibility == 'public'||resource == null;\r\n  \r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow read, write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&&\r\n          // ratingId.replace('(?:.{20}).*',''). == request.data.mapId &&\r\n          ratingId.replace('.{28}$','') == request.data.mapId &&\r\n           ((resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T03:54:44.635Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T03:54:44.635Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T03:54:44.796Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T03:54:44.796Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if resource.data.visibility == 'public'||resource == null;\r\n  \r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow read, write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&&\r\n          // ratingId.replace('(?:.{20}).*',''). == request.data.mapId &&\r\n          ratingId.replace('.{28}$','') == request.data.mapId &&\r\n           ((resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T03:54:44.812Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T03:54:44.812Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T03:55:13.103Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T03:55:13.103Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if resource.data.visibility == 'public'||resource == null;\r\n  \r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow read, write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&&\r\n          // ratingId.replace('(?:.{20}).*',''). == request.data.mapId &&\r\n          ratingId.replace('.{28}$','') == request.resource.data.mapId &&\r\n           ((resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T03:55:13.122Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T03:55:13.122Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T03:55:17.811Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T03:55:17.812Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if resource.data.visibility == 'public'||resource == null;\r\n  \r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow read, write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&&\r\n          // ratingId.replace('(?:.{20}).*',''). == request.data.mapId &&\r\n          ratingId.replace('.{28}$','') == request.resource.data.mapId &&\r\n           ((resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T03:55:17.827Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T03:55:17.827Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T03:55:17.998Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T03:55:17.999Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if resource.data.visibility == 'public'||resource == null;\r\n  \r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow read, write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&&\r\n          // ratingId.replace('(?:.{20}).*',''). == request.data.mapId &&\r\n          ratingId.replace('.{28}$','') == request.resource.data.mapId &&\r\n           ((resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T03:55:18.013Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T03:55:18.013Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T03:57:45.188Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T03:57:45.188Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if resource.data.visibility == 'public'||resource == null;\r\n  \r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow read, write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&&\r\n          ratingId.replace('.{28}$','') == request.resource.data.mapId &&\r\n           ((resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T03:57:45.207Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T03:57:45.208Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T03:58:08.379Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T03:58:08.379Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if resource.data.visibility == 'public'||resource == null;\r\n  \r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow read, write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&&\r\n          ratingId.replace('.{28}$','') == request.resource.data.mapId &&\r\n           ((resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T03:58:08.394Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T03:58:08.394Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T03:59:25.862Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T03:59:25.862Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if resource.data.visibility == 'public'||resource == null;\r\n      allow read: if resource.data.ownerId == request.auth.uid;\r\n\r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&&\r\n          ratingId.replace('.{28}$','') == request.resource.data.mapId &&\r\n           ((resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T03:59:25.881Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T03:59:25.881Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T03:59:27.907Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T03:59:27.907Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if resource.data.visibility == 'public'||resource == null;\r\n      allow read: if resource.data.ownerId == request.auth.uid;\r\n\r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&&\r\n          ratingId.replace('.{28}$','') == request.resource.data.mapId &&\r\n           ((resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T03:59:27.922Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T03:59:27.922Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T04:47:14.955Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T04:47:14.955Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if resource.data.visibility == 'public'||resource == null;\r\n      allow read: if resource.data.ownerId == request.auth.uid;\r\n      allow delete: if resource.data.ownerId == request.auth.uid;\r\n\r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&&\r\n          ratingId.replace('.{28}$','') == request.resource.data.mapId &&\r\n           ((resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T04:47:15.002Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T04:47:15.002Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T04:47:42.736Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T04:47:42.736Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if resource.data.visibility == 'public'||resource == null;\r\n      allow read: if resource.data.ownerId == request.auth.uid;\r\n      allow delete: if resource.data.ownerId == request.auth.uid;\r\n\r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&&\r\n          ratingId.replace('.{28}$','') == request.resource.data.mapId &&\r\n           ((resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T04:47:42.770Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T04:47:42.771Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T04:47:42.915Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T04:47:42.915Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if resource.data.visibility == 'public'||resource == null;\r\n      allow read: if resource.data.ownerId == request.auth.uid;\r\n      allow delete: if resource.data.ownerId == request.auth.uid;\r\n\r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&&\r\n          ratingId.replace('.{28}$','') == request.resource.data.mapId &&\r\n           ((resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T04:47:42.932Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T04:47:42.932Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2023-01-16T18:42:20.117Z] >>> [apiv2][query] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules [none]
[debug] [2023-01-16T18:42:20.126Z] >>> [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    // match /{document=**} {\r\n    //   allow read, write: if\r\n    //       request.time < timestamp.date(2023, 1, 14);\r\n    // }\r\n    match /Users/{userId} {\r\n      allow read, write: if request.auth.uid == userId;\r\n    }\r\n    match /Pathes/{pathId} {\r\n      allow read: if resource.data.visibility == 'public'||resource == null;\r\n      allow read: if resource.data.ownerId == request.auth.uid;\r\n      allow delete: if resource.data.ownerId == request.auth.uid;\r\n\r\n      allow read, write, update:\r\n          if (resource == null && request.resource.data.ownerId == request.auth.uid);\r\n\r\n      allow write, update:\r\n          if (resource != null && request.resource.data.ownerId == resource.data.ownerId &&\r\n           request.auth.uid == resource.data.ownerId);\r\n\r\n      allow update: if (request.resource.data.diff(resource.data).affectedKeys()\r\n        .hasOnly(['rating', 'ratingCount'])&&\r\n        (resource==null||\r\n        (resource.data.ratingCount>=resource.data.ratingCount)));\r\n    }\r\n    match /Ratings/{ratingId}  {\r\n      allow read: if true;\r\n      allow read, write: if\r\n          ratingId.replace('^.{20}','') == request.auth.uid&&\r\n          ratingId.replace('.{28}$','') == request.resource.data.mapId &&\r\n           ((resource == null&&request.auth.uid == request.resource.data.userId)||\r\n          (request.auth.uid == resource.data.userId))\r\n    }\r\n  }\r\n}"}]}}
[debug] [2023-01-16T18:42:21.957Z] <<< [apiv2][status] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules 200
[debug] [2023-01-16T18:42:21.957Z] <<< [apiv2][body] PUT http://127.0.0.1:8081/emulator/v1/projects/***REMOVED***:securityRules {}
[info] +  firestore: Rules updated. 
[debug] [2023-01-17T00:59:30.795Z] ----------------------------------------------------------------------
[debug] [2023-01-17T00:59:30.797Z] Command:       C:\Program Files\nodejs\node.exe C:\Users\Sylay\AppData\Roaming\npm\node_modules\firebase-tools\lib\bin\firebase.js emulators:start
[debug] [2023-01-17T00:59:30.798Z] CLI Version:   11.20.0
[debug] [2023-01-17T00:59:30.798Z] Platform:      win32
[debug] [2023-01-17T00:59:30.798Z] Node Version:  v16.14.2
[debug] [2023-01-17T00:59:30.808Z] Time:          Tue Jan 17 2023 01:59:30 GMT+0100 (Central European Standard Time)
[debug] [2023-01-17T00:59:30.809Z] ----------------------------------------------------------------------
[debug] 
[debug] [2023-01-17T00:59:30.884Z] Object "" in "firebase.json" has unknown property: {"additionalProperty":"react-native"}
[debug] [2023-01-17T00:59:30.889Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2023-01-17T00:59:30.889Z] > authorizing via signed-in user (sylaypaper@gmail.com)
[debug] [2023-01-17T00:59:31.006Z] java version "18.0.2" 2022-07-19

[debug] [2023-01-17T00:59:31.006Z] Java(TM) SE Runtime Environment (build 18.0.2+9-61)
Java HotSpot(TM) 64-Bit Server VM (build 18.0.2+9-61, mixed mode, sharing)

[debug] [2023-01-17T00:59:31.020Z] Parsed Java major version: 18
[info] i  emulators: Starting emulators: firestore, storage {"metadata":{"emulator":{"name":"hub"},"message":"Starting emulators: firestore, storage"}}
[debug] [2023-01-17T00:59:31.035Z] [logging] Logging Emulator only supports listening on one address (127.0.0.1). Not listening on ::1
[debug] [2023-01-17T00:59:31.035Z] [firestore] Firestore Emulator only supports listening on one address (127.0.0.1). Not listening on ::1
[debug] [2023-01-17T00:59:31.035Z] [firestore.websocket] websocket server for firestore only supports listening on one address (127.0.0.1). Not listening on ::1
[debug] [2023-01-17T00:59:31.035Z] [storage] Storage Emulator only supports listening on one address (127.0.0.1). Not listening on ::1
[debug] [2023-01-17T00:59:31.036Z] assigned listening specs for emulators {"user":{"hub":[{"address":"127.0.0.1","family":"IPv4","port":4400},{"address":"::1","family":"IPv6","port":4400}],"ui":[{"address":"127.0.0.1","family":"IPv4","port":9999},{"address":"::1","family":"IPv6","port":9999}],"logging":[{"address":"127.0.0.1","family":"IPv4","port":4500}],"firestore":[{"address":"127.0.0.1","family":"IPv4","port":8081}],"firestore.websocket":[{"address":"127.0.0.1","family":"IPv4","port":9150}],"storage":[{"address":"127.0.0.1","family":"IPv4","port":9199}]},"metadata":{"message":"assigned listening specs for emulators"}}
[warn] !  emulators: It seems that you are running multiple instances of the emulator suite for project ***REMOVED***. This may result in unexpected behavior. 
[debug] [2023-01-17T00:59:31.042Z] [hub] writing locator at C:\Users\Sylay\AppData\Local\Temp\hub-***REMOVED***.json
[debug] [2023-01-17T00:59:31.053Z] Ignoring unsupported arg: auto_download {"metadata":{"emulator":{"name":"firestore"},"message":"Ignoring unsupported arg: auto_download"}}
[debug] [2023-01-17T00:59:31.053Z] Ignoring unsupported arg: single_project_mode_error {"metadata":{"emulator":{"name":"firestore"},"message":"Ignoring unsupported arg: single_project_mode_error"}}
[debug] [2023-01-17T00:59:31.053Z] Starting Firestore Emulator with command {"binary":"java","args":["-Dgoogle.cloud_firestore.debug_log_level=FINE","-Duser.language=en","-jar","C:\\Users\\Sylay\\.cache\\firebase\\emulators\\cloud-firestore-emulator-v1.15.1.jar","--host","127.0.0.1","--port",8081,"--websocket_port",9150,"--project_id","***REMOVED***","--rules","C:\\Users\\Sylay\\Documents\\GitHub\\geolocationtest\\health-pathes\\firestore.rules","--single_project_mode",true],"optionalArgs":["port","webchannel_port","host","rules","websocket_port","functions_emulator","seed_from_export","project_id","single_project_mode"],"joinArgs":false} {"metadata":{"emulator":{"name":"firestore"},"message":"Starting Firestore Emulator with command {\"binary\":\"java\",\"args\":[\"-Dgoogle.cloud_firestore.debug_log_level=FINE\",\"-Duser.language=en\",\"-jar\",\"C:\\\\Users\\\\Sylay\\\\.cache\\\\firebase\\\\emulators\\\\cloud-firestore-emulator-v1.15.1.jar\",\"--host\",\"127.0.0.1\",\"--port\",8081,\"--websocket_port\",9150,\"--project_id\",\"***REMOVED***\",\"--rules\",\"C:\\\\Users\\\\Sylay\\\\Documents\\\\GitHub\\\\geolocationtest\\\\health-pathes\\\\firestore.rules\",\"--single_project_mode\",true],\"optionalArgs\":[\"port\",\"webchannel_port\",\"host\",\"rules\",\"websocket_port\",\"functions_emulator\",\"seed_from_export\",\"project_id\",\"single_project_mode\"],\"joinArgs\":false}"}}
[info] i  firestore: Firestore Emulator logging to firestore-debug.log {"metadata":{"emulator":{"name":"firestore"},"message":"Firestore Emulator logging to \u001b[1mfirestore-debug.log\u001b[22m"}}
[info] +  firestore: Firestore Emulator UI websocket is running on 9150. {"metadata":{"emulator":{"name":"firestore"},"message":"Firestore Emulator UI websocket is running on 9150."}}
[debug] [2023-01-17T00:59:33.515Z] Ignoring unsupported arg: port {"metadata":{"emulator":{"name":"storage"},"message":"Ignoring unsupported arg: port"}}
[debug] [2023-01-17T00:59:34.617Z] Temp file directory for storage emulator: C:\Users\Sylay\AppData\Local\Temp/firebase/storage/blobs {"metadata":{"emulator":{"name":"storage"},"message":"Temp file directory for storage emulator: C:\\Users\\Sylay\\AppData\\Local\\Temp/firebase/storage/blobs"}}
[debug] [2023-01-17T00:59:34.630Z] Ignoring unsupported arg: auto_download {"metadata":{"emulator":{"name":"ui"},"message":"Ignoring unsupported arg: auto_download"}}
[debug] [2023-01-17T00:59:34.630Z] Ignoring unsupported arg: port {"metadata":{"emulator":{"name":"ui"},"message":"Ignoring unsupported arg: port"}}
[debug] [2023-01-17T00:59:34.630Z] Starting Emulator UI with command {"binary":"node","args":["C:\\Users\\Sylay\\.cache\\firebase\\emulators\\ui-v1.11.2\\server\\server.js"],"optionalArgs":[],"joinArgs":false} {"metadata":{"emulator":{"name":"ui"},"message":"Starting Emulator UI with command {\"binary\":\"node\",\"args\":[\"C:\\\\Users\\\\Sylay\\\\.cache\\\\firebase\\\\emulators\\\\ui-v1.11.2\\\\server\\\\server.js\"],\"optionalArgs\":[],\"joinArgs\":false}"}}
[info] i  ui: Emulator UI logging to ui-debug.log {"metadata":{"emulator":{"name":"ui"},"message":"Emulator UI logging to \u001b[1mui-debug.log\u001b[22m"}}
[debug] [2023-01-17T00:59:34.793Z] Web / API server started at 127.0.0.1:9999
 {"metadata":{"emulator":{"name":"ui"},"message":"Web / API server started at 127.0.0.1:9999\n"}}
[debug] [2023-01-17T00:59:34.793Z] Web / API server started at ::1:9999
 {"metadata":{"emulator":{"name":"ui"},"message":"Web / API server started at ::1:9999\n"}}
[info] 
┌─────────────────────────────────────────────────────────────┐
│ ✔  All emulators ready! It is now safe to connect your app. │
│ i  View Emulator UI at http://127.0.0.1:9999/               │
└─────────────────────────────────────────────────────────────┘

┌───────────┬────────────────┬─────────────────────────────────┐
│ Emulator  │ Host:Port      │ View in Emulator UI             │
├───────────┼────────────────┼─────────────────────────────────┤
│ Firestore │ 127.0.0.1:8081 │ http://127.0.0.1:9999/firestore │
├───────────┼────────────────┼─────────────────────────────────┤
│ Storage   │ 127.0.0.1:9199 │ http://127.0.0.1:9999/storage   │
└───────────┴────────────────┴─────────────────────────────────┘
  Emulator Hub running at 127.0.0.1:4400
  Other reserved ports: 4500, 9150

Issues? Report them at https://github.com/firebase/firebase-tools/issues and attach the *-debug.log files.
 
[debug] [2023-01-17T02:29:10.199Z] ----------------------------------------------------------------------
[debug] [2023-01-17T02:29:10.201Z] Command:       C:\Program Files\nodejs\node.exe C:\Users\Sylay\AppData\Roaming\npm\node_modules\firebase-tools\lib\bin\firebase.js emulators:start
[debug] [2023-01-17T02:29:10.202Z] CLI Version:   11.20.0
[debug] [2023-01-17T02:29:10.202Z] Platform:      win32
[debug] [2023-01-17T02:29:10.202Z] Node Version:  v16.14.2
[debug] [2023-01-17T02:29:10.210Z] Time:          Tue Jan 17 2023 03:29:10 GMT+0100 (Central European Standard Time)
[debug] [2023-01-17T02:29:10.211Z] ----------------------------------------------------------------------
[debug] 
[debug] [2023-01-17T02:29:10.214Z] >>> [apiv2][query] GET https://firebase-public.firebaseio.com/cli.json [none]
[debug] [2023-01-17T02:29:10.295Z] Object "" in "firebase.json" has unknown property: {"additionalProperty":"react-native"}
[debug] [2023-01-17T02:29:10.301Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2023-01-17T02:29:10.301Z] > authorizing via signed-in user (sylaypaper@gmail.com)
[debug] [2023-01-17T02:29:10.405Z] java version "18.0.2" 2022-07-19

[debug] [2023-01-17T02:29:10.405Z] Java(TM) SE Runtime Environment (build 18.0.2+9-61)
Java HotSpot(TM) 64-Bit Server VM (build 18.0.2+9-61, mixed mode, sharing)

[debug] [2023-01-17T02:29:10.417Z] Parsed Java major version: 18
[info] i  emulators: Starting emulators: firestore, storage {"metadata":{"emulator":{"name":"hub"},"message":"Starting emulators: firestore, storage"}}
[debug] [2023-01-17T02:29:10.431Z] [logging] Logging Emulator only supports listening on one address (127.0.0.1). Not listening on ::1
[debug] [2023-01-17T02:29:10.431Z] [firestore] Firestore Emulator only supports listening on one address (127.0.0.1). Not listening on ::1
[debug] [2023-01-17T02:29:10.432Z] [firestore.websocket] websocket server for firestore only supports listening on one address (127.0.0.1). Not listening on ::1
[debug] [2023-01-17T02:29:10.432Z] [storage] Storage Emulator only supports listening on one address (127.0.0.1). Not listening on ::1
[debug] [2023-01-17T02:29:10.432Z] assigned listening specs for emulators {"user":{"hub":[{"address":"127.0.0.1","family":"IPv4","port":4400},{"address":"::1","family":"IPv6","port":4400}],"ui":[{"address":"127.0.0.1","family":"IPv4","port":9999},{"address":"::1","family":"IPv6","port":9999}],"logging":[{"address":"127.0.0.1","family":"IPv4","port":4500}],"firestore":[{"address":"127.0.0.1","family":"IPv4","port":8081}],"firestore.websocket":[{"address":"127.0.0.1","family":"IPv4","port":9150}],"storage":[{"address":"127.0.0.1","family":"IPv4","port":9199}]},"metadata":{"message":"assigned listening specs for emulators"}}
[warn] !  emulators: It seems that you are running multiple instances of the emulator suite for project ***REMOVED***. This may result in unexpected behavior. 
[debug] [2023-01-17T02:29:10.439Z] [hub] writing locator at C:\Users\Sylay\AppData\Local\Temp\hub-***REMOVED***.json
[debug] [2023-01-17T02:29:10.450Z] Ignoring unsupported arg: auto_download {"metadata":{"emulator":{"name":"firestore"},"message":"Ignoring unsupported arg: auto_download"}}
[debug] [2023-01-17T02:29:10.450Z] Ignoring unsupported arg: single_project_mode_error {"metadata":{"emulator":{"name":"firestore"},"message":"Ignoring unsupported arg: single_project_mode_error"}}
[debug] [2023-01-17T02:29:10.451Z] Starting Firestore Emulator with command {"binary":"java","args":["-Dgoogle.cloud_firestore.debug_log_level=FINE","-Duser.language=en","-jar","C:\\Users\\Sylay\\.cache\\firebase\\emulators\\cloud-firestore-emulator-v1.15.1.jar","--host","127.0.0.1","--port",8081,"--websocket_port",9150,"--project_id","***REMOVED***","--rules","C:\\Users\\Sylay\\Documents\\GitHub\\geolocationtest\\health-pathes\\firestore.rules","--single_project_mode",true],"optionalArgs":["port","webchannel_port","host","rules","websocket_port","functions_emulator","seed_from_export","project_id","single_project_mode"],"joinArgs":false} {"metadata":{"emulator":{"name":"firestore"},"message":"Starting Firestore Emulator with command {\"binary\":\"java\",\"args\":[\"-Dgoogle.cloud_firestore.debug_log_level=FINE\",\"-Duser.language=en\",\"-jar\",\"C:\\\\Users\\\\Sylay\\\\.cache\\\\firebase\\\\emulators\\\\cloud-firestore-emulator-v1.15.1.jar\",\"--host\",\"127.0.0.1\",\"--port\",8081,\"--websocket_port\",9150,\"--project_id\",\"***REMOVED***\",\"--rules\",\"C:\\\\Users\\\\Sylay\\\\Documents\\\\GitHub\\\\geolocationtest\\\\health-pathes\\\\firestore.rules\",\"--single_project_mode\",true],\"optionalArgs\":[\"port\",\"webchannel_port\",\"host\",\"rules\",\"websocket_port\",\"functions_emulator\",\"seed_from_export\",\"project_id\",\"single_project_mode\"],\"joinArgs\":false}"}}
[info] i  firestore: Firestore Emulator logging to firestore-debug.log {"metadata":{"emulator":{"name":"firestore"},"message":"Firestore Emulator logging to \u001b[1mfirestore-debug.log\u001b[22m"}}
[debug] [2023-01-17T02:29:10.621Z] <<< [apiv2][status] GET https://firebase-public.firebaseio.com/cli.json 200
[debug] [2023-01-17T02:29:10.621Z] <<< [apiv2][body] GET https://firebase-public.firebaseio.com/cli.json {"cloudBuildErrorAfter":1594252800000,"cloudBuildWarnAfter":1590019200000,"defaultNode10After":1594252800000,"minVersion":"3.0.5","node8DeploysDisabledAfter":1613390400000,"node8RuntimeDisabledAfter":1615809600000,"node8WarnAfter":1600128000000}
[info] +  firestore: Firestore Emulator UI websocket is running on 9150. {"metadata":{"emulator":{"name":"firestore"},"message":"Firestore Emulator UI websocket is running on 9150."}}
[debug] [2023-01-17T02:29:12.993Z] Ignoring unsupported arg: port {"metadata":{"emulator":{"name":"storage"},"message":"Ignoring unsupported arg: port"}}
[debug] [2023-01-17T02:29:13.997Z] Temp file directory for storage emulator: C:\Users\Sylay\AppData\Local\Temp/firebase/storage/blobs {"metadata":{"emulator":{"name":"storage"},"message":"Temp file directory for storage emulator: C:\\Users\\Sylay\\AppData\\Local\\Temp/firebase/storage/blobs"}}
[debug] [2023-01-17T02:29:14.008Z] Ignoring unsupported arg: auto_download {"metadata":{"emulator":{"name":"ui"},"message":"Ignoring unsupported arg: auto_download"}}
[debug] [2023-01-17T02:29:14.008Z] Ignoring unsupported arg: port {"metadata":{"emulator":{"name":"ui"},"message":"Ignoring unsupported arg: port"}}
[debug] [2023-01-17T02:29:14.008Z] Starting Emulator UI with command {"binary":"node","args":["C:\\Users\\Sylay\\.cache\\firebase\\emulators\\ui-v1.11.2\\server\\server.js"],"optionalArgs":[],"joinArgs":false} {"metadata":{"emulator":{"name":"ui"},"message":"Starting Emulator UI with command {\"binary\":\"node\",\"args\":[\"C:\\\\Users\\\\Sylay\\\\.cache\\\\firebase\\\\emulators\\\\ui-v1.11.2\\\\server\\\\server.js\"],\"optionalArgs\":[],\"joinArgs\":false}"}}
[info] i  ui: Emulator UI logging to ui-debug.log {"metadata":{"emulator":{"name":"ui"},"message":"Emulator UI logging to \u001b[1mui-debug.log\u001b[22m"}}
[debug] [2023-01-17T02:29:14.150Z] Web / API server started at 127.0.0.1:9999
 {"metadata":{"emulator":{"name":"ui"},"message":"Web / API server started at 127.0.0.1:9999\n"}}
[debug] [2023-01-17T02:29:14.151Z] Web / API server started at ::1:9999
 {"metadata":{"emulator":{"name":"ui"},"message":"Web / API server started at ::1:9999\n"}}
[info] 
┌─────────────────────────────────────────────────────────────┐
│ ✔  All emulators ready! It is now safe to connect your app. │
│ i  View Emulator UI at http://127.0.0.1:9999/               │
└─────────────────────────────────────────────────────────────┘

┌───────────┬────────────────┬─────────────────────────────────┐
│ Emulator  │ Host:Port      │ View in Emulator UI             │
├───────────┼────────────────┼─────────────────────────────────┤
│ Firestore │ 127.0.0.1:8081 │ http://127.0.0.1:9999/firestore │
├───────────┼────────────────┼─────────────────────────────────┤
│ Storage   │ 127.0.0.1:9199 │ http://127.0.0.1:9999/storage   │
└───────────┴────────────────┴─────────────────────────────────┘
  Emulator Hub running at 127.0.0.1:4400
  Other reserved ports: 4500, 9150

Issues? Report them at https://github.com/firebase/firebase-tools/issues and attach the *-debug.log files.
 
[debug] [2023-01-17T14:43:23.537Z] ----------------------------------------------------------------------
[debug] [2023-01-17T14:43:23.539Z] Command:       C:\Program Files\nodejs\node.exe C:\Users\Sylay\AppData\Roaming\npm\node_modules\firebase-tools\lib\bin\firebase.js emulators:start
[debug] [2023-01-17T14:43:23.540Z] CLI Version:   11.20.0
[debug] [2023-01-17T14:43:23.540Z] Platform:      win32
[debug] [2023-01-17T14:43:23.540Z] Node Version:  v16.14.2
[debug] [2023-01-17T14:43:23.549Z] Time:          Tue Jan 17 2023 15:43:23 GMT+0100 (Central European Standard Time)
[debug] [2023-01-17T14:43:23.549Z] ----------------------------------------------------------------------
[debug] 
[debug] [2023-01-17T14:43:23.616Z] Object "" in "firebase.json" has unknown property: {"additionalProperty":"react-native"}
[debug] [2023-01-17T14:43:23.621Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2023-01-17T14:43:23.622Z] > authorizing via signed-in user (sylaypaper@gmail.com)
[debug] [2023-01-17T14:43:23.726Z] java version "18.0.2" 2022-07-19
Java(TM) SE Runtime Environment (build 18.0.2+9-61)

[debug] [2023-01-17T14:43:23.726Z] Java HotSpot(TM) 64-Bit Server VM (build 18.0.2+9-61, mixed mode, sharing)

[debug] [2023-01-17T14:43:23.739Z] Parsed Java major version: 18
[info] i  emulators: Starting emulators: firestore, storage {"metadata":{"emulator":{"name":"hub"},"message":"Starting emulators: firestore, storage"}}
[debug] [2023-01-17T14:43:23.754Z] [logging] Logging Emulator only supports listening on one address (127.0.0.1). Not listening on ::1
[debug] [2023-01-17T14:43:23.754Z] [firestore] Firestore Emulator only supports listening on one address (127.0.0.1). Not listening on ::1
[debug] [2023-01-17T14:43:23.754Z] [firestore.websocket] websocket server for firestore only supports listening on one address (127.0.0.1). Not listening on ::1
[debug] [2023-01-17T14:43:23.754Z] [storage] Storage Emulator only supports listening on one address (127.0.0.1). Not listening on ::1
[debug] [2023-01-17T14:43:23.754Z] assigned listening specs for emulators {"user":{"hub":[{"address":"127.0.0.1","family":"IPv4","port":4400},{"address":"::1","family":"IPv6","port":4400}],"ui":[{"address":"127.0.0.1","family":"IPv4","port":9999},{"address":"::1","family":"IPv6","port":9999}],"logging":[{"address":"127.0.0.1","family":"IPv4","port":4500}],"firestore":[{"address":"127.0.0.1","family":"IPv4","port":8081}],"firestore.websocket":[{"address":"127.0.0.1","family":"IPv4","port":9150}],"storage":[{"address":"127.0.0.1","family":"IPv4","port":9199}]},"metadata":{"message":"assigned listening specs for emulators"}}
[warn] !  emulators: It seems that you are running multiple instances of the emulator suite for project ***REMOVED***. This may result in unexpected behavior. 
[debug] [2023-01-17T14:43:23.761Z] [hub] writing locator at C:\Users\Sylay\AppData\Local\Temp\hub-***REMOVED***.json
[debug] [2023-01-17T14:43:23.772Z] Ignoring unsupported arg: auto_download {"metadata":{"emulator":{"name":"firestore"},"message":"Ignoring unsupported arg: auto_download"}}
[debug] [2023-01-17T14:43:23.772Z] Ignoring unsupported arg: single_project_mode_error {"metadata":{"emulator":{"name":"firestore"},"message":"Ignoring unsupported arg: single_project_mode_error"}}
[debug] [2023-01-17T14:43:23.772Z] Starting Firestore Emulator with command {"binary":"java","args":["-Dgoogle.cloud_firestore.debug_log_level=FINE","-Duser.language=en","-jar","C:\\Users\\Sylay\\.cache\\firebase\\emulators\\cloud-firestore-emulator-v1.15.1.jar","--host","127.0.0.1","--port",8081,"--websocket_port",9150,"--project_id","***REMOVED***","--rules","C:\\Users\\Sylay\\Documents\\GitHub\\geolocationtest\\health-pathes\\firestore.rules","--single_project_mode",true],"optionalArgs":["port","webchannel_port","host","rules","websocket_port","functions_emulator","seed_from_export","project_id","single_project_mode"],"joinArgs":false} {"metadata":{"emulator":{"name":"firestore"},"message":"Starting Firestore Emulator with command {\"binary\":\"java\",\"args\":[\"-Dgoogle.cloud_firestore.debug_log_level=FINE\",\"-Duser.language=en\",\"-jar\",\"C:\\\\Users\\\\Sylay\\\\.cache\\\\firebase\\\\emulators\\\\cloud-firestore-emulator-v1.15.1.jar\",\"--host\",\"127.0.0.1\",\"--port\",8081,\"--websocket_port\",9150,\"--project_id\",\"***REMOVED***\",\"--rules\",\"C:\\\\Users\\\\Sylay\\\\Documents\\\\GitHub\\\\geolocationtest\\\\health-pathes\\\\firestore.rules\",\"--single_project_mode\",true],\"optionalArgs\":[\"port\",\"webchannel_port\",\"host\",\"rules\",\"websocket_port\",\"functions_emulator\",\"seed_from_export\",\"project_id\",\"single_project_mode\"],\"joinArgs\":false}"}}
[info] i  firestore: Firestore Emulator logging to firestore-debug.log {"metadata":{"emulator":{"name":"firestore"},"message":"Firestore Emulator logging to \u001b[1mfirestore-debug.log\u001b[22m"}}
[info] +  firestore: Firestore Emulator UI websocket is running on 9150. {"metadata":{"emulator":{"name":"firestore"},"message":"Firestore Emulator UI websocket is running on 9150."}}
[debug] [2023-01-17T14:43:26.300Z] Ignoring unsupported arg: port {"metadata":{"emulator":{"name":"storage"},"message":"Ignoring unsupported arg: port"}}
[debug] [2023-01-17T14:43:27.281Z] Temp file directory for storage emulator: C:\Users\Sylay\AppData\Local\Temp/firebase/storage/blobs {"metadata":{"emulator":{"name":"storage"},"message":"Temp file directory for storage emulator: C:\\Users\\Sylay\\AppData\\Local\\Temp/firebase/storage/blobs"}}
[debug] [2023-01-17T14:43:27.291Z] Ignoring unsupported arg: auto_download {"metadata":{"emulator":{"name":"ui"},"message":"Ignoring unsupported arg: auto_download"}}
[debug] [2023-01-17T14:43:27.291Z] Ignoring unsupported arg: port {"metadata":{"emulator":{"name":"ui"},"message":"Ignoring unsupported arg: port"}}
[debug] [2023-01-17T14:43:27.291Z] Starting Emulator UI with command {"binary":"node","args":["C:\\Users\\Sylay\\.cache\\firebase\\emulators\\ui-v1.11.2\\server\\server.js"],"optionalArgs":[],"joinArgs":false} {"metadata":{"emulator":{"name":"ui"},"message":"Starting Emulator UI with command {\"binary\":\"node\",\"args\":[\"C:\\\\Users\\\\Sylay\\\\.cache\\\\firebase\\\\emulators\\\\ui-v1.11.2\\\\server\\\\server.js\"],\"optionalArgs\":[],\"joinArgs\":false}"}}
[info] i  ui: Emulator UI logging to ui-debug.log {"metadata":{"emulator":{"name":"ui"},"message":"Emulator UI logging to \u001b[1mui-debug.log\u001b[22m"}}
[debug] [2023-01-17T14:43:27.432Z] Web / API server started at 127.0.0.1:9999
 {"metadata":{"emulator":{"name":"ui"},"message":"Web / API server started at 127.0.0.1:9999\n"}}
[debug] [2023-01-17T14:43:27.432Z] Web / API server started at ::1:9999
 {"metadata":{"emulator":{"name":"ui"},"message":"Web / API server started at ::1:9999\n"}}
[info] 
┌─────────────────────────────────────────────────────────────┐
│ ✔  All emulators ready! It is now safe to connect your app. │
│ i  View Emulator UI at http://127.0.0.1:9999/               │
└─────────────────────────────────────────────────────────────┘

┌───────────┬────────────────┬─────────────────────────────────┐
│ Emulator  │ Host:Port      │ View in Emulator UI             │
├───────────┼────────────────┼─────────────────────────────────┤
│ Firestore │ 127.0.0.1:8081 │ http://127.0.0.1:9999/firestore │
├───────────┼────────────────┼─────────────────────────────────┤
│ Storage   │ 127.0.0.1:9199 │ http://127.0.0.1:9999/storage   │
└───────────┴────────────────┴─────────────────────────────────┘
  Emulator Hub running at 127.0.0.1:4400
  Other reserved ports: 4500, 9150

Issues? Report them at https://github.com/firebase/firebase-tools/issues and attach the *-debug.log files.
 
